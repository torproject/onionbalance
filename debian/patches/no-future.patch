Forwarded: https://github.com/torproject/onionbalance/pull/50/files

diff --git a/requirements.txt b/requirements.txt
index ebdfed5..55effe1 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -5,4 +5,3 @@ pyyaml>=4.2b1
 cryptography>=3.2
 pycryptodomex
 
-future>=0.14.3
diff --git a/setup.py b/setup.py
index a23d50c..4c5d0d9 100644
--- a/setup.py
+++ b/setup.py
@@ -47,7 +47,6 @@ setup(
         'stem>=1.8',
         'PyYAML>=4.2b1',
         'pycryptodomex',
-        'future>=0.14.0',
         'setproctitle',
         'cryptography>=2.5',
     ],
diff --git a/onionbalance/common/intro_point_set.py b/onionbalance/common/intro_point_set.py
index 701bce8..345b354 100644
--- a/onionbalance/common/intro_point_set.py
+++ b/onionbalance/common/intro_point_set.py
@@ -1,4 +1,3 @@
-from future.moves.itertools import zip_longest
 import random
 import itertools
 
@@ -53,7 +52,7 @@ class IntroductionPointSet(object):
         """
 
         # Combine intro points from across the backend instances and flatten
-        intro_points = zip_longest(*self.intro_points)
+        intro_points = itertools.zip_longest(*self.intro_points)
         flat_intro_points = itertools.chain.from_iterable(intro_points)
         for intro_point in itertools.cycle(flat_intro_points):
             if intro_point:
